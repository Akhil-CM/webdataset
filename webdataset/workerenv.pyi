from . import autodecode as autodecode, dbcache as dbcache, gopen as gopen, iterators as iterators, shardcache as shardcache, tariterators as tariterators, utils as utils
from .utils import lookup_sym as lookup_sym, reraise_exception as reraise_exception, safe_eval as safe_eval
from typing import Any, Optional

worker_environment: Any
too_few_shards_warning: Any

def worker_id(): ...

class WorkerEnvironment:
    identity: Any = ...
    rank: Any = ...
    world_size: Any = ...
    worker: Any = ...
    nworkers: Any = ...
    def __init__(self, rank: int = ..., world_size: int = ..., worker: int = ..., nworkers: int = ...) -> None: ...

class TorchWorkerEnvironment(WorkerEnvironment):
    rank: Any = ...
    world_size: Any = ...
    worker: Any = ...
    nworkers: Any = ...
    def __init__(self, group: Optional[Any] = ...) -> None: ...

def get_worker_environment(): ...
def split_by_node(urls: Any, env: Optional[Any] = ...): ...
def split_by_worker(urls: Any, env: Optional[Any] = ...): ...
